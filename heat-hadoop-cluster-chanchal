heat_template_version: 2013-05-23

description: >
  HOT template to deploy an automation server to host the REST API for 
  onboarding automation and assign a floating IP address to the server

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: hadoop
  image_id:
    type: string
    description: ID of image to use for servers
    default: 74c385b5-68bd-46d0-9a4e-e653b271a835
  admin_user:
    type: string
    description: Username of admin user
    default: hadoop
  flavor:
    type: string
    description: Flavor to use for servers
    default: c4-15gb-83
  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
    default: ed95741b-78cf-410a-9f41-5a9be31f36ef
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
    default: ae424fec-8cc7-4b56-8c82-32d6463359ec
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: 5a6bd137-0266-4637-a53d-af823e31573b  
  ssh_security_group:
    type: string
    description: ID of a security-group that allows SSH traffic
    default: ssh-hadoop

resources:
  hadoop_master_server:
    type: OS::Nova::Server
    properties:
      name: hadoop_master
      admin_user: { get_param: admin_user }
      image: { get_param: image_id }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: hadoop_master_server_port }

  hadoop_master_server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: [{ get_resource: hadoop_security_group }, { get_param: ssh_security_group }]

  hadoop_master_server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: hadoop_master_server_port }

  hadoop_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: hadoop-security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 50070
          port_range_max: 50070
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 50075
          port_range_max: 50075
        # update the following remote_ip_prefix to match the subnet of your private network
        - remote_ip_prefix: 192.168.0.0/24
          protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 8088
          port_range_max: 8088
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

  nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: heat-datanode.yaml
        properties:
          server_name: hadoop-data-%index%
          hadoop_security_group: { get_resource: hadoop_security_group }
          key_name: { get_param: key_name }
          image_id: { get_param: image_id }
          admin_user: { get_param: admin_user }
          flavor: { get_param: flavor }
          public_net_id: { get_param: public_net_id }
          private_net_id: { get_param: private_net_id }
          private_subnet_id: { get_param: private_subnet_id }
          ssh_security_group: { get_param: ssh_security_group }
          
outputs:
  hadoop_master_private_ip:
    description: IP address of Hadoop Master in private network
    value: { get_attr: [ hadoop_master_server, first_address ] }
  hadoop_master_public_ip:
    description: Floating IP address of Hadoop Master in public network
    value: { get_attr: [ hadoop_master_server_floating_ip, floating_ip_address ] }
  nodes_public_ips:
    description: Public IP for datanode
    value: {get_attr: [nodes, hadoop_node_public_ip]}
  nodes_private_ips:
    description: Private IP for datanode
    value: {get_attr: [nodes, hadoop_node_private_ip]}
